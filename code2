import java.util.Scanner;
import java.util.Vector;

public class PizzaShop {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Login functionality
        System.out.println("--- Login ---");
        System.out.print("Enter username: ");
        String username = scanner.nextLine();
        System.out.print("Enter password: ");
        String password = scanner.nextLine();

        if (!username.equals("pizza") || !password.equals("pizza")) {
            System.out.println("Invalid username or password. Exiting...");
            return;
        }

        System.out.println("\n--- Welcome to Pizza Palace ---\n");

        Menu menu = new Menu();
        OrderManager orderManager = new OrderManager();

        while (true) {
            System.out.println("--- Pizza Menu ---");
            for (int i = 0; i < menu.getPizzaMenu().length; i++) {
                System.out.printf("%d. %s - INR %.2f%n", (i + 1), menu.getPizzaMenu()[i], menu.getPizzaPrice(i));
            }
            System.out.println("6. Exit");

            System.out.print("Select a pizza by number or exit: ");
            int pizzaChoice = scanner.nextInt();
            scanner.nextLine(); // Consume newline
            if (pizzaChoice == 6) {
                System.out.println("\nExiting the program. Thank you for visiting Pizza Palace!");
                break;
            }

            if (pizzaChoice < 1 || pizzaChoice > 5) {
                System.out.println("Invalid choice. Please try again.");
                continue;
            }

            System.out.print("Choose pizza size (small/medium/large): ");
            String size = scanner.nextLine().toLowerCase();

            System.out.print("Enter the quantity: ");
            int quantity = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            double orderTotal = orderManager.processOrder(pizzaChoice, size, quantity, menu, scanner);

            System.out.printf("Price: INR %.2f%n", orderTotal);

            System.out.print("Would you like to order more? (yes/no): ");
            String choice = scanner.nextLine();
            if (!choice.equalsIgnoreCase("yes")) {
                System.out.print("\nEnter your name: ");
                String customerName = scanner.nextLine();

                String customerEmail;
                while (true) {
                    System.out.print("Enter your email: ");
                    customerEmail = scanner.nextLine();
                    if (isValidEmail(customerEmail)) {
                        break;
                    } else {
                        System.out.println("Invalid email. Please enter a valid email address.");
                    }
                }

                System.out.println("\n--- Your Order Summary ---");
                orderManager.printOrderSummary();
                System.out.println("\n--- Bill ---");
                System.out.printf("Customer Name: %s%n", customerName);
                System.out.printf("Email: %s%n", customerEmail);
                System.out.printf("Total Bill: INR %.2f%n", orderManager.calculateTotalBill());
                System.out.println("\nThank you for ordering from Pizza Palace!");
                break;
            }
        }

        scanner.close();
    }

    // Method to validate email
    private static boolean isValidEmail(String email) {
        String emailRegex = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$";
        return email.matches(emailRegex);
    }
}

class Menu {
    private final String[] pizzaMenu = {"Cheese Burst Pizza", "Veggie Pizza", "Paneer Pizza", "Pepperoni Pizza"};
    private final double[] pizzaPrices = {250.0, 150.0, 200.0, 400.0};
    private final String[] toppingMenu = {"Mushrooms", "Onions", "Bell Peppers", "Olives", "Bacon"};
    private final double[] toppingPrices = {20.0, 30.0, 25.0, 10.0, 50.0};

    public String[] getPizzaMenu() {
        return pizzaMenu;
    }

    public double getPizzaPrice(int index) {
        return pizzaPrices[index];
    }

    public String[] getToppingMenu() {
        return toppingMenu;
    }

    public double getToppingPrice(int index) {
        return toppingPrices[index];
    }
}

class OrderManager {
    private final Vector<String> orderedPizzas = new Vector<>();
    private final Vector<Vector<String>> orderedToppings = new Vector<>();
    private final Vector<Integer> quantities = new Vector<>();
    private final Vector<Double> orderPrices = new Vector<>();
    private final Vector<String> orderedSizes = new Vector<>();

    public double processOrder(int pizzaChoice, String size, int quantity, Menu menu, Scanner scanner) {
        String pizza = menu.getPizzaMenu()[pizzaChoice - 1];

        orderedPizzas.add(pizza);
        quantities.add(quantity);
        orderedSizes.add(size);

        double pizzaPrice = calculatePizzaPrice(pizzaChoice, size, menu);
        double orderTotal = pizzaPrice * quantity;
        orderPrices.add(orderTotal);

        System.out.print("Would you like to add toppings? (yes/no): ");
        String toppingChoice = scanner.nextLine();
        Vector<String> toppings = new Vector<>();
        if (toppingChoice.equalsIgnoreCase("yes")) {
            toppings = addToppingsToOrder(menu, scanner);
        }
        orderedToppings.add(toppings);
        return orderTotal;
    }

    private double calculatePizzaPrice(int pizzaChoice, String size, Menu menu) {
        double basePrice = menu.getPizzaPrice(pizzaChoice - 1);
        switch (size.toLowerCase()) {
            case "medium":
                return basePrice * 1.2;
            case "large":
                return basePrice * 1.5;
            default:
                return basePrice;
        }
    }

    private Vector<String> addToppingsToOrder(Menu menu, Scanner scanner) {
        Vector<String> toppings = new Vector<>();
        while (true) {
            System.out.printf("Select toppings (1 to %d, or %d to finish):%n", menu.getToppingMenu().length, menu.getToppingMenu().length + 1);
            for (int i = 0; i < menu.getToppingMenu().length; i++) {
                System.out.printf("%d. %s - INR %.2f%n", (i + 1), menu.getToppingMenu()[i], menu.getToppingPrice(i));
            }
            int toppingChoice = scanner.nextInt();
            scanner.nextLine(); // Consume newline
            if (toppingChoice >= 1 && toppingChoice <= menu.getToppingMenu().length) {
                toppings.add(menu.getToppingMenu()[toppingChoice - 1]);
            } else if (toppingChoice == menu.getToppingMenu().length + 1) {
                break;
            } else {
                System.out.println("Invalid choice. Please select a valid topping.");
            }
        }
        return toppings;
    }

    public void printOrderSummary() {
        for (int i = 0; i < orderedPizzas.size(); i++) {
            System.out.printf("Pizza: %s (%s), Size: %s, Quantity: %d%n", orderedPizzas.get(i), orderedSizes.get(i), orderedSizes.get(i), quantities.get(i));
            System.out.print("Toppings: ");
            if (orderedToppings.get(i).isEmpty()) {
                System.out.print("None");
            } else {
                for (String topping : orderedToppings.get(i)) {
                    System.out.print(topping + " ");
                }
            }
            System.out.println();
            System.out.printf("Price: INR %.2f%n", orderPrices.get(i));
        }
    }

    public double calculateTotalBill() {
        double total = 0;
        for (double price : orderPrices) {
            total += price;
        }
        return total;
    }
}
